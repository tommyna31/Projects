{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/tommyna31/Projects/blob/main/rockpaperscissors\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2KuIwT84NTQH",
        "outputId": "223c5717-ba38-4614-ce05-662c5c8d6507"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Welcome to ROCK, PAPER, SCISSORS! Ready to play?\n",
            "Okay.\n",
            "Okay.\n",
            "The computer chose PAPER and therefore \n",
            "YOU LOSE.\n",
            "Invalid option.\n",
            "Okay.\n",
            "The computer chose ROCK and therefore \n",
            "YOU LOSE.\n",
            "Okay.\n",
            "The computer chose SCISSORS and therefore \n",
            "YOU LOSE.\n",
            "Invalid option.\n",
            "Okay.\n",
            "Invalid option.\n",
            "Okay.\n",
            "The computer chose PAPER and therefore \n",
            "YOU LOSE.\n",
            "Okay.\n",
            "Okay.\n",
            "Enter 'yes' to play or 'no' to stop playing:yes\n",
            "Okay.\n"
          ]
        }
      ],
      "source": [
        "import secrets\n",
        "\n",
        "print(\"Welcome to rock, paper, scissors! Ready to play?\")\n",
        "\n",
        "active = True\n",
        "while active:\n",
        "  choices = ['yes', 'no']\n",
        "\n",
        "  choices = input(\"Enter 'yes' to play or 'no' to stop playing:\")\n",
        "\n",
        "  if choices == 'yes':\n",
        "    print(\"Okay.\")\n",
        "    user_choice = (['rock','paper','scissors'])\n",
        "    computer_choice = secrets.choice(['rock','paper','scissors'])\n",
        "    user_choice = input(\"Now, choose between rock, paper, scissors.\")\n",
        "    if user_choice == 'rock':\n",
        "      if computer_choice == 'rock':\n",
        "        print(\"The computer chose rock and therefore it is \\na TIE.\")\n",
        "      elif computer_choice == 'paper':\n",
        "        print(\"The computer chose paper and therefore \\nYOU LOSE.\")\n",
        "      else:\n",
        "        print(\"The computer chose scissors and therefore \\nYOU WIN.\")\n",
        "    elif user_choice == 'paper':\n",
        "      if computer_choice == 'rock':\n",
        "        print(\"The computer chose rock and therefore \\nYOU WIN.\")\n",
        "      elif computer_choice == 'paper':\n",
        "        print(\"The computer chose paper and therefore you it is \\na TIE.\")\n",
        "      else:\n",
        "        print(\"The computer chose scissors and therefore \\nYOU LOSE.\")\n",
        "    elif user_choice == 'scissors':\n",
        "      if computer_choice == 'rock':\n",
        "        print(\"The computer chose rock and therefore \\nYOU LOSE.\")\n",
        "      elif computer_choice == 'paper':\n",
        "        print(\"The computer chose paper and therefore \\nYOU WIN.\")\n",
        "      else:\n",
        "        print(\"The computer chose scissor and therefore it is \\na TIE.\")\n",
        "  elif choices == 'no':\n",
        "    print(\"Good bye!\")\n",
        "    active = False\n",
        "  else:\n",
        "    print(\"Invalid option.\")\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "wZvxDm8ODyG_"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}